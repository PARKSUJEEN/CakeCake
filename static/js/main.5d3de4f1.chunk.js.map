{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/utils/ImageSlider.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/Datas.js","components/views/LandingPage/Sections/RadioBox.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/LandingPage/Sections/RenderBest.js","components/views/LandingPage/Sections/RenderNew.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/views/DetailProductPage/Sections/ProductImage.js","components/views/DetailProductPage/Sections/ProductInfo.js","components/views/DetailProductPage/DetailProductPage.js","components/views/CartPage/Sections/UserCardBlock.js","components/utils/Paypal.js","components/views/CartPage/CartPage.js","components/views/HistoryPage/HistoryPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","ImageSlider","autoplay","images","map","image","index","key","style","width","maxHeight","src","Panel","Collapse","CheckBox","useState","Checked","setChecked","defaultActiveKey","border","backgroundColor","color","fontSize","header","list","value","Fragment","onChange","currentIndex","indexOf","newChecked","splice","handleFilters","handleToggle","_id","checked","name","cakes","price","array","RadioBox","Value","setValue","Group","e","target","Search","Input","SearchFeature","SearchTerm","setSearchTerm","placeholder","currentTarget","refreshFunction","settings","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","RenderBest","Bestseller","setBestseller","product","console","log","className","sort","a","b","sold","href","title","RenderNew","New","setNew","Date","parse","createdAt","Button","styled","button","LandingPage","Products","setProducts","AllProducts","setAllProducts","Skip","setSkip","Limit","PostSize","setPostSize","Filters","setFilters","Toggle","setToggle","getProducts","skip","limit","getAllproducts","body","post","success","loadMore","productInfo","postSize","alert","renderCards","lg","md","xs","cover","description","filters","category","newFilters","priceValues","parseInt","handlePrice","showFilteredResults","margin","textAlign","onClick","gutter","display","justifyContent","marginRight","marginBottom","minWidth","newSearchTerm","searchTerm","justify","align","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","Item","prefix","onBlur","padding","borderRadius","float","htmlType","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","SubMenu","Menu","ItemGroup","LeftMenu","mode","userData","status","SideBar","Drawer","NavBar","visible","setVisible","position","zIndex","placement","closable","onClose","Footer","height","flexDirection","alignItems","FileUpload","Images","setImages","onDrop","files","formData","FormData","append","filePath","getRootProps","getInputProps","overflowX","newImages","deleteHandler","TextArea","Cakes","UploadProductPage","setTitle","Description","setDescription","Price","setPrice","Cake","setCake","maxWidth","fontColor","preventDefault","writer","cake","item","ProductImage","detail","length","original","thumbnail","items","p","ProductInfo","size","productId","addToCart","DetailProductPage","match","params","Product","setProduct","UserCardBlock","renderCartImage","products","alt","quantity","editItem","confirm","Paypal","total","this","env","client","sandbox","production","currency","onError","onSuccess","payment","onCancel","React","Component","CartPage","Total","setTotal","ShowTotal","setShowTotal","ShowSuccess","setShowSuccess","cartItems","cart","forEach","userCart","cartItem","productDetail","getCartItems","calculateTotal","cartDetail","editFromCart","useCallback","editToCart","transform","removeCartItem","onSuccessBuy","paymentData","HistoryPage","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d3de4f1.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  LOGIN_USER,\n  REGISTER_USER,\n  AUTH_USER,\n  LOGOUT_USER,\n  ADD_TO_CART,\n  GET_CART_ITEMS,\n  REMOVE_CART_ITEM,\n  EDIT_TO_CART,\n  ON_SUCCESS_BUY,\n} from \"./types\";\nimport { USER_SERVER } from \"../components/Config.js\";\n\nexport function registerUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/register`, dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: REGISTER_USER,\n    payload: request,\n  };\n}\n\nexport function loginUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/login`, dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: LOGIN_USER,\n    payload: request,\n  };\n}\n\nexport function auth() {\n  const request = axios\n    .get(`${USER_SERVER}/auth`)\n    .then((response) => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request,\n  };\n}\n\nexport function logoutUser() {\n  const request = axios\n    .get(`${USER_SERVER}/logout`)\n    .then((response) => response.data);\n\n  return {\n    type: LOGOUT_USER,\n    payload: request,\n  };\n}\n\nexport function addToCart(id) {\n  let body = {\n    productId: id,\n  };\n  const request = axios\n    .post(`${USER_SERVER}/addToCart`, body)\n    .then((response) => response.data);\n\n  return {\n    type: ADD_TO_CART,\n    payload: request,\n  };\n}\n\nexport function editToCart(id, quantity) {\n  let body = {\n    productId: id,\n    quantity: quantity,\n  };\n\n  const request = axios\n    .post(`${USER_SERVER}/editToCart`, body)\n    .then((response) => response.data);\n\n  return {\n    type: EDIT_TO_CART,\n    payload: request,\n  };\n}\n\nexport function getCartItems(cartItems, userCart) {\n  //item을 가져오는거니까 get메서드 사용\n  const request = axios\n    .get(`/api/product/products_by_id?id=${cartItems}&type=array`)\n    .then((response) => {\n      // CartItem들에 해당하는 정보들을\n      // Product Collection에서 가져온 후에\n      // Quantity 정보를 넣어 준다.\n\n      userCart.forEach((cartItem) => {\n        response.data.forEach((productDetail, index) => {\n          //상품의 id와 userCart의 id가 같은지\n\n          if (cartItem.id === productDetail._id) {\n            response.data[index].quantity = cartItem.quantity;\n          }\n        });\n      });\n\n      return response.data;\n    });\n\n  return {\n    type: GET_CART_ITEMS,\n    payload: request,\n  };\n}\n\nexport function removeCartItem(productId) {\n  //item을 가져오는거니까 get메서드 사용\n  const request = axios\n    .get(`/api/users/removeFromCart?id=${productId}`)\n    .then((response) => {\n      response.data.cart.forEach((item) => {\n        response.data.productInfo.forEach((product, index) => {\n          if (item.id === product.id) {\n            response.data.productInfo[index].quantity = item.quantity;\n          }\n        });\n      });\n\n      return response.data;\n    });\n\n  return {\n    type: REMOVE_CART_ITEM,\n    payload: request,\n  };\n}\n\nexport function onSuccessBuy(data) {\n  const request = axios\n    .post(`/api/users/successBuy`, data)\n    .then((response) => response.data);\n\n  return {\n    type: ON_SUCCESS_BUY,\n    payload: request,\n  };\n}\n","export const LOGIN_USER = \"login_user\";\nexport const REGISTER_USER = \"register_user\";\nexport const AUTH_USER = \"auth_user\";\nexport const LOGOUT_USER = \"logout_user\";\nexport const ADD_TO_CART = \"add_to_cart\";\nexport const GET_CART_ITEMS = \"get_cart_items\";\nexport const REMOVE_CART_ITEM = \"remove_cart_item\";\nexport const EDIT_TO_CART = \"edit_to_cart\";\nexport const ON_SUCCESS_BUY = \"on_success_buy\";\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from \"react\";\r\nimport { Carousel } from \"antd\";\r\n\r\nfunction ImageSlider(props) {\r\n  return (\r\n    <Carousel autoplay>\r\n      {props.images.map((image, index) => (\r\n        <div key={index}>\r\n          <img\r\n            style={{ width: \"100%\", maxHeight: \"200px\" }}\r\n            src={`http://localhost:5000/${image}`}\r\n          />\r\n        </div>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default ImageSlider;\r\n","import React, { useState } from \"react\";\r\nimport { Collapse, Checkbox } from \"antd\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction CheckBox(props) {\r\n  const [Checked, setChecked] = useState([]);\r\n\r\n  const handleToggle = (value) => {\r\n    // 누른 것의 Index를 구하고\r\n    const currentIndex = Checked.indexOf(value);\r\n\r\n    // 전체 Checked된 State에서(없는 값을 누르면 -1) 현재 누른 Checkbox가 이미 있다면\r\n    const newChecked = [...Checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n      // 빼주고\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n    // State에 넣어준다.\r\n\r\n    props.handleFilters(newChecked);\r\n  };\r\n\r\n  const renderCheckboxLists = () =>\r\n    props.list &&\r\n    props.list.map((value, index) => (\r\n      <React.Fragment key={index}>\r\n        <Checkbox\r\n          onChange={() => handleToggle(value._id)}\r\n          checked={Checked.indexOf(value._id) === -1 ? false : true}\r\n        />\r\n        <span>{value.name}</span>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      <Collapse\r\n        defaultActiveKey={[\"0\"]}\r\n        style={{\r\n          border: \"2px solid #000000\",\r\n          backgroundColor: \"#f7f6f2\",\r\n          color: \"#000000\",\r\n          fontSize: \"20px\",\r\n        }}\r\n      >\r\n        <Panel header=\"MENU\" key=\"1\">\r\n          {renderCheckboxLists()}\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckBox;\r\n","const cakes = [\r\n  {\r\n    _id: 1,\r\n    name: \"ButterCake\",\r\n  },\r\n  {\r\n    _id: 2,\r\n    name: \"RollCake\",\r\n  },\r\n  {\r\n    _id: 3,\r\n    name: \"CheeseCake\",\r\n  },\r\n  {\r\n    _id: 4,\r\n    name: \"SpongeCake\",\r\n  },\r\n  {\r\n    _id: 5,\r\n    name: \"MooseCake\",\r\n  },\r\n  {\r\n    _id: 6,\r\n    name: \"ChiffonCake\",\r\n  },\r\n  {\r\n    _id: 7,\r\n    name: \"Another\",\r\n  },\r\n];\r\n\r\nconst price = [\r\n  {\r\n    _id: 0,\r\n    name: \"Any\",\r\n    array: [],\r\n  },\r\n  {\r\n    _id: 1,\r\n    name: \"0원 ~ 9,999원\",\r\n    array: [0, 9999],\r\n  },\r\n  {\r\n    _id: 2,\r\n    name: \"10,000원 ~ 19,999원\",\r\n    array: [10000, 19999],\r\n  },\r\n  {\r\n    _id: 3,\r\n    name: \"20,000원 ~ 29,999원\",\r\n    array: [20000, 29999],\r\n  },\r\n  {\r\n    _id: 4,\r\n    name: \"30,000원 ~ 39,999원\",\r\n    array: [30000, 39999],\r\n  },\r\n  {\r\n    _id: 5,\r\n    name: \"40,000원 이상\",\r\n    array: [40000, 99999],\r\n  },\r\n];\r\n\r\nexport { cakes, price };\r\n","import React, { useState } from \"react\";\r\nimport { Collapse, Radio, Slider } from \"antd\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction RadioBox(props) {\r\n  const [Value, setValue] = useState(0);\r\n\r\n  const renderRadioBox = () =>\r\n    props.list &&\r\n    props.list.map((value) => (\r\n      <Radio key={value._id} value={value._id}>\r\n        {value.name}\r\n      </Radio>\r\n    ));\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n    props.handleFilters(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Collapse\r\n        defaultActiveKey={[\"0\"]}\r\n        style={{\r\n          border: \"2px solid #000000\",\r\n          backgroundColor: \"#f7f6f2\",\r\n          color: \"#000000\",\r\n          fontSize: \"20px\",\r\n        }}\r\n      >\r\n        <Panel header=\"PRICE\" key=\"1\">\r\n          <Radio.Group onChange={handleChange} value={Value}>\r\n            {/* Value==this.state.value */}\r\n            {renderRadioBox()}\r\n          </Radio.Group>\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RadioBox;\r\n","import React, { useState } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction SearchFeature(props) {\r\n  const [SearchTerm, setSearchTerm] = useState(\"\");\r\n  const searchHandler = (e) => {\r\n    setSearchTerm(e.currentTarget.value);\r\n    props.refreshFunction(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Search\r\n        placeholder=\"Search\"\r\n        onChange={searchHandler}\r\n        value={SearchTerm}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchFeature;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"../LandingPage.css\";\r\n\r\nconst settings = {\r\n  dots: true,\r\n  arrows: true,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 4,\r\n  slidesToScroll: 1,\r\n  responsive: [\r\n    // 반응형 웹 구현 옵션\r\n    {\r\n      breakpoint: 960, //화면 사이즈 960px\r\n      settings: {\r\n        //위에 옵션이 디폴트 , 여기에 추가하면 그걸로 변경\r\n        slidesToShow: 4,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 768, //화면 사이즈 768px\r\n      settings: {\r\n        //위에 옵션이 디폴트 , 여기에 추가하면 그걸로 변경\r\n        slidesToShow: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nfunction RenderBest(props) {\r\n  const [Bestseller, setBestseller] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setBestseller(props.product);\r\n    console.log(\"renderBest실행됨\");\r\n  }, [props.product]);\r\n\r\n  const bestview = () => {\r\n    const compare = (a, b) => a.sold - b.sold;\r\n    const sortedList = Bestseller.sort(compare);\r\n    return sortedList;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Render\">\r\n      <Slider {...settings}>\r\n        {bestview().map((product, index) => (\r\n          <div key={index} className=\"Render_wrap\">\r\n            <div className=\"img\">\r\n              <a href={`/product/${product._id}`}>\r\n                <img\r\n                  // style={{ Width: \"200px\", maxHeight: \"200px\" }}\r\n                  src={`http://localhost:5000/${product.images[0]}`}\r\n                />\r\n              </a>\r\n            </div>\r\n            <div className=\"title\"> {product.title}</div>\r\n            <div className=\"price\">{`$${product.price}`}</div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenderBest;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"../LandingPage.css\";\r\n\r\nconst settings = {\r\n  arrows: true,\r\n  infinite: true,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  slidesToScroll: 1,\r\n  responsive: [\r\n    // 반응형 웹 구현 옵션\r\n    {\r\n      breakpoint: 960, //화면 사이즈 960px\r\n      settings: {\r\n        //위에 옵션이 디폴트 , 여기에 추가하면 그걸로 변경\r\n        slidesToShow: 4,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 768, //화면 사이즈 768px\r\n      settings: {\r\n        //위에 옵션이 디폴트 , 여기에 추가하면 그걸로 변경\r\n        slidesToShow: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\nfunction RenderNew(props) {\r\n  const [New, setNew] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setNew(props.product);\r\n    console.log(\"renderNew실행됨\");\r\n  }, [props.product]);\r\n\r\n  const newview = () => {\r\n    const compare = (a, b) => Date.parse(b.createdAt) - Date.parse(a.createdAt);\r\n    const sortedList = New.sort(compare);\r\n    return sortedList;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Render\">\r\n      <Slider {...settings}>\r\n        {newview().map((product, index) => (\r\n          <div key={index} className=\"Render_wrap\">\r\n            <div>\r\n              <a href={`/product/${product._id}`}>\r\n                <img\r\n                  // style={{ Width: \"200px\", maxHeight: \"200px\" }}\r\n                  src={`http://localhost:5000/${product.images[0]}`}\r\n                />\r\n              </a>\r\n            </div>\r\n\r\n            <div className=\"title\"> {product.title}</div>\r\n\r\n            <div className=\"price\">{`$${product.price}`}</div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenderNew;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\nimport { Icon, Col, Card, Row, Carousel } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport ImageSlider from \"../../utils/ImageSlider\";\nimport CheckBox from \"./Sections/CheckBox\";\nimport { cakes, price } from \"./Sections/Datas\";\nimport RadioBox from \"./Sections/RadioBox\";\nimport SearchFeature from \"./Sections/SearchFeature\";\nimport styled from \"styled-components\";\n\nimport \"./LandingPage.css\";\nimport RenderBest from \"./Sections/RenderBest\";\nimport RenderNew from \"./Sections/RenderNew\";\n\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n};\n\nfunction LandingPage() {\n  const [Products, setProducts] = useState([]);\n  const [AllProducts, setAllProducts] = useState([]);\n  const [Skip, setSkip] = useState(0);\n  const [Limit, setLimit] = useState(8); // 페이지에 보이는 상품 수\n  const [PostSize, setPostSize] = useState(0); // 더보기 버튼 8개 이상일때만 보이기!\n  const [Filters, setFilters] = useState({\n    cakes: [],\n    price: [],\n  });\n\n  const [SearchTerm, setSearchTerm] = useState(\"\");\n  const [Toggle, setToggle] = useState(false);\n\n  useEffect(() => {\n    let body = {\n      skip: Skip,\n      limit: Limit,\n    };\n\n    getProducts(body);\n    getAllproducts();\n  }, []);\n\n  const getProducts = (body) => {\n    axios.post(\"/api/product/products\", body).then((response) => {\n      console.log(response.data);\n\n      if (response.data.success) {\n        if (body.loadMore) {\n          setProducts([...Products, ...response.data.productInfo]);\n        } else {\n          setProducts(response.data.productInfo);\n        }\n\n        setPostSize(response.data.postSize); //PostSize가 아닌 product.js에 정의한 postSize로\n      } else {\n        alert(\"상품을 가져오는데 실패 했습니다.\");\n      }\n    });\n  };\n\n  const getAllproducts = () => {\n    axios.post(\"/api/product/allproducts\").then((response) => {\n      console.log(\"getAllProducts\", response.data);\n\n      if (response.data.success) {\n        setAllProducts(response.data.productInfo);\n      } else {\n        alert(\"전체상품을 가져오는데 실패 했습니다.\");\n      }\n    });\n  };\n\n  const renderCards = Products.map((product, index) => {\n    return (\n      <Col lg={6} md={8} xs={24} key={index}>\n        <Card\n          cover={\n            <a href={`/product/${product._id}`}>\n              <ImageSlider images={product.images} />\n            </a>\n          }\n          // cover={\n          //   <img\n          //     syle={{ width: \"100%\", maxHeight: \"150px\" }}\n          //     src={`http://localhost:5000/${product.images[0]}`}\n          //   />\n          // }\n        >\n          <Meta title={product.title} description={`$${product.price}`} />\n        </Card>\n      </Col>\n    );\n  });\n\n  const loadMoreHandler = () => {\n    let skip = Skip + Limit;\n\n    let body = {\n      skip: skip, // let skip후 이 skip의 값을 skip: Skip이 아닌 skip : skip ->\n      limit: Limit,\n      loadMore: true,\n    };\n\n    getProducts(body);\n    setSkip(skip);\n  };\n\n  const showFilteredResults = (filters) => {\n    let body = {\n      skip: 0, // skip은 0 새로 누를때마다 처음부터 다시 시작이 돼야함.\n      limit: Limit,\n      filters: filters,\n    };\n\n    getProducts(body);\n    setSkip(0);\n  };\n\n  // handleFilter의 Price\n  const handlePrice = (value) => {\n    const data = price;\n    let array = [];\n\n    for (let key in data) {\n      // 아래의 id ===value-> 이 value는 filters값\n      if (data[key]._id === parseInt(value, 10)) {\n        array = data[key].array;\n      }\n    }\n\n    return array;\n  };\n\n  const handleFilters = (filters, category) => {\n    const newFilters = { ...Filters };\n\n    newFilters[category] = filters;\n\n    console.log(\"filters : \", filters);\n\n    if (category === \"price\") {\n      let priceValues = handlePrice(filters);\n      newFilters[category] = priceValues; // priceValues = [0,1000] [1000,20000]\n    }\n\n    showFilteredResults(newFilters);\n    //추가! (이러지 않으면 findArgs에 (당시)클릭한 해당 key값만 들어오게 됨)\n    setFilters(newFilters);\n  };\n\n  const updateSearchTerm = (newSearchTerm) => {\n    let body = {\n      skip: 0,\n      limit: Limit,\n      filters: Filters, // 눌러져있는값까지 가지고온다.\n      searchTerm: newSearchTerm,\n    };\n\n    setSkip(0);\n    setSearchTerm(newSearchTerm);\n    getProducts(body);\n  };\n\n  return (\n    <div style={{ width: \"75%\", margin: \"3rem auto\" }}>\n      <div style={{ textAlign: \"center\" }}></div>\n      {/* \n      <div>\n        <Slider {...settings}>\n          <div>\n            <h3>1</h3>\n            <img\n              style={{ minWidth: \"500px\", width: \"300px\", height: \"500px\" }}\n              src=\"img/1657868791094_cake4.jpg\"\n            />\n          </div>\n          <div>\n            <h3>2</h3>\n          </div>\n          <div>\n            <h3>3</h3>\n          </div>\n          <div>\n            <h3>4</h3>\n          </div>\n          <div>\n            <h3>5</h3>\n          </div>\n          <div>\n            <h3>6</h3>\n          </div>\n        </Slider>\n      </div> */}\n      {/* { Filter } */}\n      <div className=\"itemSection\">\n        <div className=\"itemSection_wrap\">\n          <div>Staples</div>\n          <div\n            onClick={() => {\n              setToggle(false);\n              console.log(\"landingpage에서 newCakes클릭\");\n            }}\n          >\n            New Cakes\n          </div>\n          <div\n            onClick={() => {\n              setToggle(true);\n            }}\n          >\n            Bestsellers\n          </div>\n        </div>\n        <div className=\"LandingPage_render\">\n          {Toggle ? (\n            <>\n              <RenderBest product={AllProducts} />\n            </>\n          ) : (\n            <>\n              <RenderNew product={AllProducts} />\n            </>\n          )}\n        </div>\n      </div>\n      <div className=\"flow-container\">\n        <div className=\"flow-text\">\n          <div className=\"flow-wrap\">Text that flows from right to left. </div>\n          <div className=\"flow-wrap\">Text that flows from right to left. </div>\n          <div className=\"flow-wrap\">Text that flows from right to left. </div>\n          <div className=\"flow-wrap\">Text that flows from right to left. </div>\n        </div>\n      </div>\n\n      <Row gutter={[16, 16]}>\n        <Col lg={12} xs={24}>\n          {/* { CheckBox } */}\n          <CheckBox\n            list={cakes}\n            handleFilters={(filters) => handleFilters(filters, \"cakes\")}\n          />\n        </Col>\n\n        <Col lg={12} xs={24}>\n          {/* { RadioBox } */}\n          <RadioBox\n            list={price}\n            handleFilters={(filters) => handleFilters(filters, \"price\")}\n          />\n        </Col>\n\n        {/* { Search } */}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            marginRight: \"9px\",\n            marginBottom: \"5px\",\n            minWidth: \"20px\",\n          }}\n        >\n          <SearchFeature refreshFunction={updateSearchTerm} />\n        </div>\n\n        {/* { Cards } */}\n      </Row>\n\n      <Row gutter={[16, 16]} justify=\"start\" align=\"top\">\n        {renderCards}\n      </Row>\n      <br />\n      {PostSize >= Limit && (\n        <div\n          className=\"LandingPage_morebtn\"\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n        >\n          <Button onClick={loadMoreHandler}>더보기</Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst Button = styled.button`\n  border: 2px solid #000000;\n  border-radius: 2em;\n  padding: 10px;\n  background-color: #f7f6f2;\n  color: #000000;\n  width: 70px;\n  cursor: pointer;\n`;\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email || '' }\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from \"react\";\nimport { Menu } from \"antd\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n      <SubMenu title={<span>Blogs</span>}>\n        {/* <MenuItemGroup title=\"Item 1\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup> */}\n      </SubMenu>\n    </Menu>\n  );\n}\n\nexport default LeftMenu;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Menu, Icon, Badge } from \"antd\";\nimport axios from \"axios\";\nimport { USER_SERVER } from \"../../../Config\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"./Navbar.css\";\n\nfunction RightMenu(props) {\n  const user = useSelector((state) => state.user);\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert(\"Log Out Failed\");\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    );\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"history\">\n          <a href=\"/history\">History</a>\n        </Menu.Item>\n        <Menu.Item key=\"upload\">\n          <a href=\"/product/upload\">Upload</a>\n        </Menu.Item>\n\n        <Menu.Item key=\"cart\">\n          <a href=\"/user/cart\">Cart</a>\n        </Menu.Item>\n\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default withRouter(RightMenu);\n","import React, { useState } from \"react\";\nimport LeftMenu from \"./Sections/LeftMenu\";\nimport RightMenu from \"./Sections/RightMenu\";\nimport { Drawer, Button, Icon, UpCircleOutlined } from \"antd\";\nimport \"./Sections/Navbar.css\";\nimport styled from \"styled-components\";\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <nav\n      className=\"menu\"\n      style={{ position: \"fixed\", zIndex: 5, width: \"100%\" }}\n    >\n      <div className=\"menu__logo\">\n        <a href=\"/\">CakeCake</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_right\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n\n        <div className=\"menu__mobile-button\" onClick={showDrawer}></div>\n        {/* <SideBar> */}\n        <SideBar\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </SideBar>\n        {/* </SideBar> */}\n      </div>\n    </nav>\n  );\n}\n\nconst SideBar = styled(Drawer)`\n  color: #000000;\n  .ant-drawer-content {\n    background-color: #000000;\n  }\n  .ant-drawer-body {\n    background-color: #000000;\n  }\n`;\n\nexport default NavBar;\n","import React from \"react\";\nimport { Icon } from \"antd\";\n\nfunction Footer() {\n  return (\n    <div\n      style={{\n        backgroundColor: \"#000000\",\n        height: \"80px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"1rem\",\n        color: \"#ffffff\",\n      }}\n    >\n      <p>Copyright©2022 CakeCake - All Rights Reserved.</p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport { Icon } from 'antd';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction FileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([]);\r\n\r\n    const dropHandler = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: {'content-type':'multipart/form-data'}\r\n        };\r\n\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/product/image', formData, config)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                setImages([...Images, response.data.filePath])\r\n                props.refreshFunction([...Images, response.data.filePath])\r\n                alert('파일을 저장 완료 했습니다.')\r\n            } else {\r\n                alert('파일을 저장하는 데 실패 했습니다.');\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n    const deleteHandler = (image) => {\r\n        const currentIndex = Images.indexOf(image)\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between'}}>\r\n        <Dropzone onDrop={dropHandler}>\r\n            {({ getRootProps, getInputProps }) => (\r\n                    <div \r\n                        style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <Icon type=\"plus\" style={{ fontSize: '3rem'}} />\r\n                    </div>\r\n\r\n            )}\r\n        </Dropzone>\r\n\r\n        <div style={{ display:'flex', width:'350px', height:'240px', overflowX:'scroll'}}>\r\n            {Images.map((image, index)=>(\r\n                <div key={index}>   \r\n                    <button onClick={()=>deleteHandler(image)} key={index}>❌{index+1}</button>\r\n                    <img \r\n                        style={{ minWidth: '300px', width: '300px', height: '240px'}}\r\n                        src={`http://localhost:5000/${image}`}\r\n                     />\r\n                </div>\r\n            ))}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport FileUpload from \"../../utils/FileUpload\";\r\nimport axios from \"axios\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst Cakes = [\r\n  { key: 1, value: \"ButterCake\" },\r\n  { key: 2, value: \"RollCake\" },\r\n  { key: 3, value: \"CheeseCake\" },\r\n  { key: 4, value: \"SpongeCake\" },\r\n  { key: 5, value: \"MooseCake\" },\r\n  { key: 6, value: \"ChiffonCake\" },\r\n  { key: 7, value: \"Another\" },\r\n];\r\n\r\nfunction UploadProductPage(props) {\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [Price, setPrice] = useState(0);\r\n  const [Cake, setCake] = useState(1);\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const descriptionChangeHandler = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const priceChangeHandler = (e) => {\r\n    setPrice(e.target.value);\r\n  };\r\n\r\n  const cakeChangeHandler = (e) => {\r\n    setCake(e.target.value);\r\n  };\r\n\r\n  const updateImages = (newImages) => {\r\n    setImages(newImages);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!Title || !Description || !Price || !Cake || !Images) {\r\n      return alert(\" 모든 값을 넣어 주셔야 합니다.\");\r\n    }\r\n\r\n    //서버에 채운 값들을 request로 보낸다.\r\n\r\n    const body = {\r\n      //로그인된 사람의 ID\r\n      writer: props.user.userData._id,\r\n      title: Title,\r\n      description: Description,\r\n      price: Price,\r\n      images: Images,\r\n      cake: Cake,\r\n    };\r\n\r\n    axios.post(\"/api/product\", body).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"상품 업로드에 성공했습니다.\");\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"상품 업로드에 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n      <div\r\n        style={{ fontColor: \"pink\", textAlign: \"center\", marginBottom: \"2rem\" }}\r\n      >\r\n        <h2>C A K E U P L O A D P A G E 🍰</h2>\r\n      </div>\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        {/* DropZone */}\r\n        <FileUpload refreshFunction={updateImages} />\r\n\r\n        <br />\r\n        <br />\r\n        <label>이름</label>\r\n        <Input onChange={titleChangeHandler} value={Title} />\r\n        <br />\r\n        <br />\r\n        <label>설명</label>\r\n        <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n        <br />\r\n        <br />\r\n        <label>가격(won)</label>\r\n        <Input type=\"number\" onChange={priceChangeHandler} value={Price} />\r\n        <br />\r\n        <br />\r\n        <select onChange={cakeChangeHandler} value={3}>\r\n          {Cakes.map((item) => (\r\n            <option key={item.key} value={item.key}>\r\n              {item.value}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n        <br />\r\n        <Button htmlType=\"submit\">확인</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadProductPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport \"../DetailProductPage.css\";\r\n\r\nfunction ProductImage(props) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.detail.images && props.detail.images.length > 0) {\r\n      let images = [];\r\n\r\n      props.detail.images.map((item) => {\r\n        images.push({\r\n          original: `http://localhost:5000/${item}`, // 원래는 다이나믹하게 처리해주어야함.\r\n          thumbnail: `http://localhost:5000/${item}`,\r\n        });\r\n      });\r\n\r\n      setImages(images);\r\n    }\r\n  }, [props.detail]);\r\n\r\n  return (\r\n    <div className=\"ProductImage\">\r\n      <ImageGallery items={Images} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductImage;\r\n","import React from \"react\";\r\nimport { Button, Descriptions } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToCart } from \"../../../../_actions/user_actions\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ProductInfo(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const clickHandler = () => {\r\n    //필요한 정보를 Cart 필드에다가 넣어 준다.\r\n    alert(`장바구니에 ${props.detail.title}를 담았습니다.`);\r\n    dispatch(addToCart(props.detail._id));\r\n\r\n    // User관련한 정보는 Redux를 이용했기 때문에\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title>{props.detail.title}</Title>\r\n      <Price>{props.detail.price}</Price>\r\n      <Description> {props.detail.description}</Description>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div>\r\n        <Button\r\n          style={{\r\n            width: \"300px\",\r\n            backgroundColor: \"#ffffff\",\r\n            border: \"1px solid #000000\",\r\n            color: \"#000000\",\r\n          }}\r\n          size=\"large\"\r\n          shape=\"round\"\r\n          type=\"danger\"\r\n          onClick={clickHandler}\r\n        >\r\n          Add to Cart\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Title = styled.p`\r\n  color: #000000;\r\n  font-family: \"Spoqa Han Sans Neo\", \"sans-serif\";\r\n  font-size: 30px;\r\n  text-decoration: underline;\r\n`;\r\nconst Price = styled.p`\r\n  font-family: \"Spoqa Han Sans Neo\", \"sans-serif\";\r\n  color: #000000;\r\n  font-size: 25px;\r\n  margin-top: -30px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-family: \"Spoqa Han Sans Neo\", \"sans-serif\";\r\n  color: #000000;\r\n  font-size: 20px;\r\n  white-space: pre;\r\n`;\r\n\r\nexport default ProductInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProductImage from \"./Sections/ProductImage\";\r\nimport ProductInfo from \"./Sections/ProductInfo\";\r\nimport { Row, Col } from \"antd\";\r\nimport \"./DetailProductPage.css\";\r\n\r\nfunction DetailProductPage(props) {\r\n  const productId = props.match.params.productId;\r\n  const [Product, setProduct] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n      .then((response) => {\r\n        setProduct(response.data[0]);\r\n      })\r\n      .catch((err) => alert(\"err\"));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", padding: \"3rem 4rem \" }}>\r\n      <br />\r\n      <Row gutter={[16, 16]}>\r\n        <Col lg={12} sm={24}>\r\n          {/* {  Product Image} */}\r\n          <ProductImage detail={Product} />\r\n        </Col>\r\n\r\n        <Col lg={12} sm={24}>\r\n          {/* { Product Info } */}\r\n          <ProductInfo detail={Product} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailProductPage;\r\n","import React, { useState } from \"react\";\r\nimport \"./UserCardBlock.css\";\r\n\r\nfunction UserCardBlock(props) {\r\n  const renderCartImage = (images) => {\r\n    if (images.length > 0) {\r\n      let image = images[0];\r\n      return `http://localhost:5000/${image}`;\r\n    }\r\n  };\r\n\r\n  const renderItems = () =>\r\n    props.products &&\r\n    props.products.map((product) => (\r\n      <div key={product._id} className=\"renderItem_wrap\">\r\n        <div className=\"renderImage\">\r\n          <img alt=\"product\" src={renderCartImage(product.images)} />\r\n        </div>\r\n        {/* <button onClick={downdown}>{test}</button> */}\r\n        <div className=\"renderInfo\">\r\n          <div className=\"title\"> {product.title}</div>\r\n          <div className=\"price\"> {product.price}</div>\r\n          <div className=\"quantity\">\r\n            <button\r\n              onClick={() => {\r\n                let quantity = product.quantity;\r\n                if (quantity > 1) {\r\n                  quantity--;\r\n                  props.editItem(product._id, quantity);\r\n                }\r\n              }}\r\n            >\r\n              -\r\n            </button>\r\n            {product.quantity}\r\n            <button\r\n              onClick={() => {\r\n                let quantity = product.quantity;\r\n                quantity++;\r\n                props.editItem(product._id, quantity);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          <div className=\"remove\">\r\n            <button\r\n              onClick={() => {\r\n                if (window.confirm(\"선택하신 상품을 삭제하시겠습니까?\")) {\r\n                  props.removeItem(product._id);\r\n                }\r\n              }}\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      <div>{renderItems()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserCardBlock;\r\n","import React from \"react\";\r\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\r\n\r\nexport default class Paypal extends React.Component {\r\n  render() {\r\n    const onSuccess = (payment) => {\r\n      // Congratulation, it came here means everything's fine!\r\n      console.log(\"The payment was succeeded!\", payment);\r\n      this.props.onSuccess(payment);\r\n      // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n    };\r\n\r\n    const onCancel = (data) => {\r\n      // User pressed \"cancel\" or close Paypal's popup!\r\n      console.log(\"The payment was cancelled!\", data);\r\n      // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n    };\r\n\r\n    const onError = (err) => {\r\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n      console.log(\"Error!\", err);\r\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n    };\r\n\r\n    let env = \"sandbox\"; // you can set here to 'production' for production\r\n    let currency = \"USD\"; // or you can set this value from your props or state\r\n    let total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n    const client = {\r\n      sandbox:\r\n        \"ATHoaUPgCKoNOD4pExA8Nx_lszXC5VN2QPGdswTRv5i_v0VPFVIs8jCGdVmcZuMwWNHeV10Z1RMDXhRl\",\r\n      production: \"App Name\",\r\n    };\r\n    // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n    // For production app-ID:\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n    return (\r\n      <PaypalExpressBtn\r\n        env={env}\r\n        client={client}\r\n        currency={currency}\r\n        total={total}\r\n        onError={onError}\r\n        onSuccess={onSuccess}\r\n        onCancel={onCancel}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getCartItems,\r\n  removeCartItem,\r\n  editToCart,\r\n  onSuccessBuy,\r\n} from \"../../../_actions/user_actions\";\r\nimport UserCardBlock from \"./Sections/UserCardBlock\";\r\nimport \"./CartPage.css\";\r\nimport Paypal from \"../../utils/Paypal\";\r\n\r\nfunction CartPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Total, setTotal] = useState(0);\r\n  const [ShowTotal, setShowTotal] = useState(false);\r\n  const [ShowSuccess, setShowSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let cartItems = [];\r\n\r\n    //리덕스 User state안에 cart 안에 상품 들어있는지 확인\r\n    if (props.user.userData && props.user.userData.cart) {\r\n      if (props.user.userData.cart.length > 0) {\r\n        props.user.userData.cart.forEach((item) => {\r\n          cartItems.push(item.id);\r\n        });\r\n\r\n        //원래는 axios를 이용했지만 지금은 redux이용중으로 dispatch\r\n\r\n        dispatch(getCartItems(cartItems, props.user.userData.cart)).then(\r\n          (response) => {\r\n            calculateTotal(response.payload);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }, [props.user.userData]);\r\n\r\n  let calculateTotal = (cartDetail) => {\r\n    let total = 0;\r\n    cartDetail.map(\r\n      (item) => (total += parseInt(item.price, 10) * item.quantity)\r\n    );\r\n\r\n    setTotal(total);\r\n    setShowTotal(true);\r\n  };\r\n\r\n  let removeFromCart = (productId) => {\r\n    dispatch(removeCartItem(productId)).then((response) => {\r\n      if (response.payload.productInfo.length <= 0) {\r\n        setShowTotal(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  let editFromCart = useCallback((productId, quantity) => {\r\n    dispatch(editToCart(productId, quantity)).then((response) => {});\r\n  });\r\n\r\n  const transactionSuccess = (data) => {\r\n    dispatch(\r\n      onSuccessBuy({\r\n        paymentData: data,\r\n        cartDetail: props.user.cartDetail,\r\n      })\r\n    ).then((response) => {\r\n      if (response.payload.success) {\r\n        setShowTotal(false);\r\n        setShowSuccess(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"CartPage\">\r\n      <div className=\"CartPage_wrap\">\r\n        <h1>Shopping Cart</h1>\r\n\r\n        <div style={{ transform: \"none !important\" }}>\r\n          <UserCardBlock\r\n            products={props.user.cartDetail}\r\n            removeItem={removeFromCart}\r\n            editItem={editFromCart}\r\n          />\r\n        </div>\r\n\r\n        {ShowTotal ? (\r\n          <>\r\n            <div className=\"totalAmount\">\r\n              <div className=\"totalAmount_wrap\">\r\n                <div>\r\n                  Total Amount\r\n                  <br />\r\n                  {Total}\r\n                </div>\r\n                <br />\r\n                <div className=\"paypal\">\r\n                  <Paypal total={Total} onSuccess={transactionSuccess} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : ShowSuccess ? (\r\n          <div>\r\n            Thank you! :) 고객님의 주문이 완료 되었습니다. 주문내역 및 배송에\r\n            관한 안내는 주문조회 를 통하여 확인 가능합니다.\r\n          </div>\r\n        ) : (\r\n          <div>Your cart is empty. Go Shopping</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartPage;\r\n","import Axios from \"axios\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction HistoryPage(props) {\r\n  const [History, setHistory] = useState([]);\r\n\r\n  return <div></div>;\r\n}\r\n\r\nexport default HistoryPage;\r\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport UploadProductPage from \"./views/UploadProductPage/UploadProductPage\";\nimport DetailProductPage from \"./views/DetailProductPage/DetailProductPage\";\nimport CartPage from \"./views/CartPage/CartPage\";\nimport HistoryPage from \"./views/HistoryPage/HistoryPage\";\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <NavBar />\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route\n            exact\n            path=\"/product/upload\"\n            component={Auth(UploadProductPage, true)}\n          />\n\n          <Route\n            exact\n            path=\"/product/:productId\"\n            component={Auth(DetailProductPage, null)}\n          />\n          <Route exact path=\"/user/cart\" component={Auth(CartPage, true)} />\n          <Route exact path=\"/user/cart\" component={Auth(HistoryPage, true)} />\n          <Route exact path=\"/user/cart\" component={Auth(HistoryPage, true)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n  LOGIN_USER,\n  REGISTER_USER,\n  AUTH_USER,\n  LOGOUT_USER,\n  ADD_TO_CART,\n  GET_CART_ITEMS,\n  REMOVE_CART_ITEM,\n  EDIT_TO_CART,\n  ON_SUCCESS_BUY,\n} from \"../_actions/types\";\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case REGISTER_USER:\n      return { ...state, register: action.payload };\n    case LOGIN_USER:\n      return { ...state, loginSucces: action.payload };\n    case AUTH_USER:\n      return { ...state, userData: action.payload };\n    case LOGOUT_USER:\n      return { ...state };\n    case ADD_TO_CART:\n      return {\n        ...state,\n        userData: {\n          ...state.userData,\n          cart: action.payload,\n        },\n      };\n    case GET_CART_ITEMS:\n      return { ...state, cartDetail: action.payload };\n    case REMOVE_CART_ITEM:\n      return {\n        ...state,\n        cartDetail: action.payload.productInfo,\n        userData: { ...state.userData, cart: action.payload.cart },\n      };\n    case EDIT_TO_CART:\n      return {\n        ...state,\n        cartDetail: action.payload.cartDetail,\n        userData: {\n          ...state.userData,\n          cart: action.payload,\n        },\n      };\n    case ON_SUCCESS_BUY:\n      return {\n        ...state,\n        cartDetail: action.payload.cartDetail,\n        userData: {\n          ...state.userData,\n          cart: action.payload.cart,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/ie11\";\nimport \"core-js\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from \"./_reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\n\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  ReduxThunk\n)(createStore);\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      Reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}